{"ast":null,"code":"import React from 'react';\nimport classNames from 'classnames';\nimport DotLoading from '../dot-loading';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { withNativeProps } from '../../utils/native-props';\nconst classPrefix = `adm-button`;\nconst defaultProps = {\n  color: 'default',\n  fill: 'solid',\n  block: false,\n  loading: false,\n  type: 'button',\n  shape: 'default',\n  size: 'middle'\n};\nexport const Button = p => {\n  const props = mergeProps(defaultProps, p);\n  const disabled = props.disabled || props.loading;\n  return withNativeProps(props, React.createElement(\"button\", {\n    type: props.type,\n    onClick: props.onClick,\n    className: classNames(classPrefix, props.color ? `${classPrefix}-${props.color}` : null, {\n      [`${classPrefix}-block`]: props.block,\n      [`${classPrefix}-disabled`]: disabled,\n      [`${classPrefix}-fill-outline`]: props.fill === 'outline',\n      [`${classPrefix}-fill-none`]: props.fill === 'none',\n      [`${classPrefix}-mini`]: props.size === 'mini',\n      [`${classPrefix}-small`]: props.size === 'small',\n      [`${classPrefix}-large`]: props.size === 'large',\n      [`${classPrefix}-loading`]: props.loading\n    }, `${classPrefix}-shape-${props.shape}`),\n    disabled: disabled\n  }, props.loading ? React.createElement(\"div\", {\n    className: `${classPrefix}-loading-wrapper`\n  }, React.createElement(DotLoading, {\n    color: 'currentColor'\n  }), props.loadingText) : props.children));\n};","map":{"version":3,"sources":["E:/wcy/Github/fun-rec/codes/news_recsys/news_rec_web/my-app-ts/node_modules/antd-mobile/es/components/button/button.js"],"names":["React","classNames","DotLoading","mergeProps","withNativeProps","classPrefix","defaultProps","color","fill","block","loading","type","shape","size","Button","p","props","disabled","createElement","onClick","className","loadingText","children"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,UAAP,MAAuB,gBAAvB;AACA,SAASC,UAAT,QAA2B,gCAA3B;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,MAAMC,WAAW,GAAI,YAArB;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,SADY;AAEnBC,EAAAA,IAAI,EAAE,OAFa;AAGnBC,EAAAA,KAAK,EAAE,KAHY;AAInBC,EAAAA,OAAO,EAAE,KAJU;AAKnBC,EAAAA,IAAI,EAAE,QALa;AAMnBC,EAAAA,KAAK,EAAE,SANY;AAOnBC,EAAAA,IAAI,EAAE;AAPa,CAArB;AASA,OAAO,MAAMC,MAAM,GAAGC,CAAC,IAAI;AACzB,QAAMC,KAAK,GAAGb,UAAU,CAACG,YAAD,EAAeS,CAAf,CAAxB;AACA,QAAME,QAAQ,GAAGD,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACN,OAAzC;AACA,SAAON,eAAe,CAACY,KAAD,EAAQhB,KAAK,CAACkB,aAAN,CAAoB,QAApB,EAA8B;AAC1DP,IAAAA,IAAI,EAAEK,KAAK,CAACL,IAD8C;AAE1DQ,IAAAA,OAAO,EAAEH,KAAK,CAACG,OAF2C;AAG1DC,IAAAA,SAAS,EAAEnB,UAAU,CAACI,WAAD,EAAcW,KAAK,CAACT,KAAN,GAAe,GAAEF,WAAY,IAAGW,KAAK,CAACT,KAAM,EAA5C,GAAgD,IAA9D,EAAoE;AACvF,OAAE,GAAEF,WAAY,QAAhB,GAA0BW,KAAK,CAACP,KADuD;AAEvF,OAAE,GAAEJ,WAAY,WAAhB,GAA6BY,QAF0D;AAGvF,OAAE,GAAEZ,WAAY,eAAhB,GAAiCW,KAAK,CAACR,IAAN,KAAe,SAHuC;AAIvF,OAAE,GAAEH,WAAY,YAAhB,GAA8BW,KAAK,CAACR,IAAN,KAAe,MAJ0C;AAKvF,OAAE,GAAEH,WAAY,OAAhB,GAAyBW,KAAK,CAACH,IAAN,KAAe,MAL+C;AAMvF,OAAE,GAAER,WAAY,QAAhB,GAA0BW,KAAK,CAACH,IAAN,KAAe,OAN8C;AAOvF,OAAE,GAAER,WAAY,QAAhB,GAA0BW,KAAK,CAACH,IAAN,KAAe,OAP8C;AAQvF,OAAE,GAAER,WAAY,UAAhB,GAA4BW,KAAK,CAACN;AARqD,KAApE,EASjB,GAAEL,WAAY,UAASW,KAAK,CAACJ,KAAM,EATlB,CAHqC;AAa1DK,IAAAA,QAAQ,EAAEA;AAbgD,GAA9B,EAc3BD,KAAK,CAACN,OAAN,GAAgBV,KAAK,CAACkB,aAAN,CAAoB,KAApB,EAA2B;AAC5CE,IAAAA,SAAS,EAAG,GAAEf,WAAY;AADkB,GAA3B,EAEhBL,KAAK,CAACkB,aAAN,CAAoBhB,UAApB,EAAgC;AACjCK,IAAAA,KAAK,EAAE;AAD0B,GAAhC,CAFgB,EAIfS,KAAK,CAACK,WAJS,CAAhB,GAIsBL,KAAK,CAACM,QAlBD,CAAR,CAAtB;AAmBD,CAtBM","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport DotLoading from '../dot-loading';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { withNativeProps } from '../../utils/native-props';\nconst classPrefix = `adm-button`;\nconst defaultProps = {\n  color: 'default',\n  fill: 'solid',\n  block: false,\n  loading: false,\n  type: 'button',\n  shape: 'default',\n  size: 'middle'\n};\nexport const Button = p => {\n  const props = mergeProps(defaultProps, p);\n  const disabled = props.disabled || props.loading;\n  return withNativeProps(props, React.createElement(\"button\", {\n    type: props.type,\n    onClick: props.onClick,\n    className: classNames(classPrefix, props.color ? `${classPrefix}-${props.color}` : null, {\n      [`${classPrefix}-block`]: props.block,\n      [`${classPrefix}-disabled`]: disabled,\n      [`${classPrefix}-fill-outline`]: props.fill === 'outline',\n      [`${classPrefix}-fill-none`]: props.fill === 'none',\n      [`${classPrefix}-mini`]: props.size === 'mini',\n      [`${classPrefix}-small`]: props.size === 'small',\n      [`${classPrefix}-large`]: props.size === 'large',\n      [`${classPrefix}-loading`]: props.loading\n    }, `${classPrefix}-shape-${props.shape}`),\n    disabled: disabled\n  }, props.loading ? React.createElement(\"div\", {\n    className: `${classPrefix}-loading-wrapper`\n  }, React.createElement(DotLoading, {\n    color: 'currentColor'\n  }), props.loadingText) : props.children));\n};"]},"metadata":{},"sourceType":"module"}